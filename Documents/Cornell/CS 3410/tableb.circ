<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project source="2.13.21.7" version="1.0">
This file is intended to be loaded by Logisim-evolution (https://github.com/reds-heig/logisim-evolution).
<lib desc="#Wiring" name="0">
    <tool name="Splitter">
      <a name="fanout" val="1"/>
      <a name="incoming" val="6"/>
      <a name="bit0" val="none"/>
      <a name="bit1" val="none"/>
      <a name="bit2" val="0"/>
      <a name="bit3" val="none"/>
      <a name="bit4" val="none"/>
      <a name="bit5" val="none"/>
    </tool>
    <tool name="Constant">
      <a name="width" val="32"/>
      <a name="value" val="0x0"/>
    </tool>
  </lib>
  <lib desc="#Gates" name="1"/>
  <lib desc="#Plexers" name="2">
    <tool name="Multiplexer">
      <a name="enable" val="false"/>
    </tool>
    <tool name="Demultiplexer">
      <a name="enable" val="false"/>
    </tool>
  </lib>
  <lib desc="#Arithmetic" name="3"/>
  <lib desc="#Memory" name="4">
    <tool name="ROM">
      <a name="contents">addr/data: 8 8
0
</a>
    </tool>
  </lib>
  <lib desc="#I/O" name="5"/>
  <lib desc="#HDL-IP" name="6">
    <tool name="VHDL Entity">
      <a name="content">--------------------------------------------------------------------------------
-- HEIG-VD, institute REDS, 1400 Yverdon-les-Bains
-- Project :
-- File    :
-- Autor   :
-- Date    :
--
--------------------------------------------------------------------------------
-- Description :
--
--------------------------------------------------------------------------------

library ieee;
  use ieee.std_logic_1164.all;
  --use ieee.numeric_std.all;

entity VHDL_Component is
  port(
  ------------------------------------------------------------------------------
  --Insert input ports below
    horloge_i  : in  std_logic;                    -- input bit example
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example
  ------------------------------------------------------------------------------
  --Insert output ports below
    max_o      : out std_logic;                    -- output bit example
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example
    );
end VHDL_Component;

--------------------------------------------------------------------------------
--Complete your VHDL description below
architecture type_architecture of VHDL_Component is


begin


end type_architecture;
</a>
    </tool>
  </lib>
  <lib desc="#TCL" name="7">
    <tool name="TclGeneric">
      <a name="content">library ieee;
use ieee.std_logic_1164.all;

entity TCL_Generic is
  port(
    --Insert input ports below
    horloge_i  : in  std_logic;                    -- input bit example
    val_i      : in  std_logic_vector(3 downto 0); -- input vector example

    --Insert output ports below
    max_o      : out std_logic;                    -- output bit example
    cpt_o      : out std_logic_Vector(3 downto 0)  -- output vector example
  );
end TCL_Generic;
</a>
    </tool>
  </lib>
  <lib desc="#Base" name="8">
    <tool name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
  </lib>
  <lib desc="#BFH-Praktika" name="9"/>
  <lib desc="#CS3410-Components" name="10">
    <tool name="MIPSProgramROM">
      <a name="contents" val=""/>
    </tool>
  </lib>
  <main name="MIPS32"/>
  <options>
    <a name="gateUndefined" val="ignore"/>
    <a name="simlimit" val="1000"/>
    <a name="simrand" val="0"/>
    <a name="tickmain" val="half_period"/>
  </options>
  <mappings>
    <tool lib="8" map="Button2" name="Menu Tool"/>
    <tool lib="8" map="Button3" name="Menu Tool"/>
    <tool lib="8" map="Ctrl Button1" name="Menu Tool"/>
  </mappings>
  <toolbar>
    <tool lib="8" name="Poke Tool"/>
    <tool lib="8" name="Edit Tool"/>
    <tool lib="8" name="Text Tool">
      <a name="text" val=""/>
      <a name="font" val="SansSerif plain 12"/>
      <a name="halign" val="center"/>
      <a name="valign" val="base"/>
    </tool>
    <sep/>
    <tool lib="0" name="Pin"/>
    <tool lib="0" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="labelloc" val="east"/>
    </tool>
    <tool lib="1" name="NOT Gate"/>
    <tool lib="1" name="AND Gate"/>
    <tool lib="1" name="OR Gate"/>
  </toolbar>
<circuit name="TableBInsts">
    <a name="circuit" val="TableBInsts"/>
    <a name="clabel" val=""/>
    <a name="clabelup" val="east"/>
    <a name="clabelfont" val="SansSerif bold 16"/>
    <a name="circuitnamedbox" val="true"/>
    <a name="circuitvhdlpath" val=""/>
    <wire from="(310,120)" to="(370,120)"/>
    <wire from="(930,290)" to="(980,290)"/>
    <wire from="(880,240)" to="(880,380)"/>
    <wire from="(110,400)" to="(170,400)"/>
    <wire from="(480,200)" to="(530,200)"/>
    <wire from="(950,10)" to="(950,270)"/>
    <wire from="(360,220)" to="(360,240)"/>
    <wire from="(390,110)" to="(390,130)"/>
    <wire from="(400,100)" to="(400,120)"/>
    <wire from="(410,90)" to="(410,110)"/>
    <wire from="(440,80)" to="(440,100)"/>
    <wire from="(170,400)" to="(170,480)"/>
    <wire from="(250,90)" to="(250,110)"/>
    <wire from="(620,120)" to="(620,150)"/>
    <wire from="(590,190)" to="(590,220)"/>
    <wire from="(310,90)" to="(410,90)"/>
    <wire from="(540,310)" to="(650,310)"/>
    <wire from="(220,270)" to="(260,270)"/>
    <wire from="(340,200)" to="(340,230)"/>
    <wire from="(990,300)" to="(990,380)"/>
    <wire from="(440,110)" to="(530,110)"/>
    <wire from="(250,110)" to="(280,110)"/>
    <wire from="(310,100)" to="(400,100)"/>
    <wire from="(310,110)" to="(340,110)"/>
    <wire from="(330,310)" to="(360,310)"/>
    <wire from="(330,330)" to="(360,330)"/>
    <wire from="(310,80)" to="(330,80)"/>
    <wire from="(700,360)" to="(730,360)"/>
    <wire from="(440,310)" to="(460,310)"/>
    <wire from="(950,270)" to="(980,270)"/>
    <wire from="(470,270)" to="(470,310)"/>
    <wire from="(930,290)" to="(930,480)"/>
    <wire from="(790,260)" to="(790,380)"/>
    <wire from="(170,110)" to="(180,110)"/>
    <wire from="(360,80)" to="(440,80)"/>
    <wire from="(330,400)" to="(730,400)"/>
    <wire from="(1010,280)" to="(1080,280)"/>
    <wire from="(320,280)" to="(320,330)"/>
    <wire from="(200,100)" to="(200,280)"/>
    <wire from="(400,120)" to="(530,120)"/>
    <wire from="(580,220)" to="(590,220)"/>
    <wire from="(260,280)" to="(320,280)"/>
    <wire from="(700,170)" to="(820,170)"/>
    <wire from="(470,270)" to="(530,270)"/>
    <wire from="(330,330)" to="(330,400)"/>
    <wire from="(460,350)" to="(650,350)"/>
    <wire from="(220,250)" to="(340,250)"/>
    <wire from="(220,230)" to="(340,230)"/>
    <wire from="(170,480)" to="(930,480)"/>
    <wire from="(200,90)" to="(250,90)"/>
    <wire from="(590,190)" to="(650,190)"/>
    <wire from="(260,270)" to="(260,280)"/>
    <wire from="(410,140)" to="(530,140)"/>
    <wire from="(360,290)" to="(360,300)"/>
    <wire from="(280,110)" to="(280,130)"/>
    <wire from="(580,120)" to="(620,120)"/>
    <wire from="(220,260)" to="(330,260)"/>
    <wire from="(220,220)" to="(330,220)"/>
    <wire from="(370,120)" to="(370,140)"/>
    <wire from="(700,330)" to="(700,360)"/>
    <wire from="(530,240)" to="(530,270)"/>
    <wire from="(130,110)" to="(170,110)"/>
    <wire from="(440,200)" to="(480,200)"/>
    <wire from="(880,380)" to="(990,380)"/>
    <wire from="(440,100)" to="(530,100)"/>
    <wire from="(480,310)" to="(510,310)"/>
    <wire from="(170,10)" to="(170,110)"/>
    <wire from="(330,180)" to="(360,180)"/>
    <wire from="(340,300)" to="(360,300)"/>
    <wire from="(340,200)" to="(360,200)"/>
    <wire from="(480,200)" to="(480,310)"/>
    <wire from="(370,110)" to="(390,110)"/>
    <wire from="(620,150)" to="(650,150)"/>
    <wire from="(330,180)" to="(330,220)"/>
    <wire from="(790,260)" to="(820,260)"/>
    <wire from="(460,310)" to="(460,350)"/>
    <wire from="(460,310)" to="(470,310)"/>
    <wire from="(280,130)" to="(290,130)"/>
    <wire from="(390,130)" to="(530,130)"/>
    <wire from="(370,140)" to="(380,140)"/>
    <wire from="(320,330)" to="(330,330)"/>
    <wire from="(170,10)" to="(950,10)"/>
    <wire from="(340,250)" to="(340,300)"/>
    <wire from="(330,260)" to="(330,310)"/>
    <wire from="(220,240)" to="(360,240)"/>
    <wire from="(820,170)" to="(820,220)"/>
    <comp lib="1" loc="(440,310)" name="AND Gate">
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="1" loc="(390,220)" name="NOT Gate"/>
    <comp lib="1" loc="(700,330)" name="AND Gate"/>
    <comp lib="1" loc="(390,290)" name="NOT Gate"/>
    <comp lib="1" loc="(700,170)" name="AND Gate"/>
    <comp lib="1" loc="(390,330)" name="NOT Gate"/>
    <comp lib="1" loc="(540,310)" name="NOT Gate"/>
    <comp lib="1" loc="(580,220)" name="AND Gate"/>
    <comp lib="1" loc="(440,110)" name="NOT Gate"/>
    <comp lib="1" loc="(410,140)" name="NOT Gate"/>
    <comp lib="1" loc="(370,110)" name="NOT Gate"/>
    <comp lib="1" loc="(880,240)" name="XOR Gate"/>
    <comp lib="1" loc="(790,380)" name="XOR Gate"/>
    <comp lib="1" loc="(360,80)" name="NOT Gate"/>
    <comp lib="1" loc="(440,200)" name="AND Gate">
      <a name="inputs" val="3"/>
    </comp>
    <comp lib="1" loc="(390,200)" name="NOT Gate"/>
    <comp lib="8" loc="(647,50)" name="Text">
      <a name="text" val="as being a part of table B, then it should always output a nop"/>
      <a name="font" val="SansSerif plain 12"/>
    </comp>
    <comp lib="2" loc="(1010,280)" name="Multiplexer">
      <a name="width" val="32"/>
      <a name="enable" val="false"/>
    </comp>
    <comp lib="0" loc="(1080,280)" name="Pin">
      <a name="facing" val="west"/>
      <a name="output" val="true"/>
      <a name="width" val="32"/>
      <a name="label" val="Ioutput"/>
      <a name="labelloc" val="east"/>
    </comp>
    <comp lib="0" loc="(290,130)" name="Splitter">
      <a name="fanout" val="6"/>
      <a name="incoming" val="6"/>
    </comp>
    <comp lib="1" loc="(580,120)" name="AND Gate">
      <a name="inputs" val="5"/>
    </comp>
    <comp lib="0" loc="(200,280)" name="Splitter">
      <a name="fanout" val="6"/>
      <a name="incoming" val="6"/>
    </comp>
    <comp lib="0" loc="(110,400)" name="Constant">
      <a name="width" val="32"/>
      <a name="value" val="0x0"/>
    </comp>
    <comp lib="0" loc="(130,110)" name="Pin">
      <a name="width" val="32"/>
      <a name="label" val="I"/>
    </comp>
    <comp lib="1" loc="(390,180)" name="NOT Gate"/>
    <comp lib="0" loc="(180,110)" name="Splitter">
      <a name="incoming" val="32"/>
      <a name="bit1" val="0"/>
      <a name="bit2" val="0"/>
      <a name="bit3" val="0"/>
      <a name="bit4" val="0"/>
      <a name="bit5" val="0"/>
      <a name="bit6" val="none"/>
      <a name="bit7" val="none"/>
      <a name="bit8" val="none"/>
      <a name="bit9" val="none"/>
      <a name="bit10" val="none"/>
      <a name="bit11" val="none"/>
      <a name="bit12" val="none"/>
      <a name="bit13" val="none"/>
      <a name="bit14" val="none"/>
      <a name="bit15" val="none"/>
      <a name="bit16" val="none"/>
      <a name="bit17" val="none"/>
      <a name="bit18" val="none"/>
      <a name="bit19" val="none"/>
      <a name="bit20" val="none"/>
      <a name="bit21" val="none"/>
      <a name="bit22" val="none"/>
      <a name="bit23" val="none"/>
      <a name="bit24" val="none"/>
      <a name="bit25" val="none"/>
      <a name="bit26" val="1"/>
      <a name="bit27" val="1"/>
      <a name="bit28" val="1"/>
      <a name="bit29" val="1"/>
      <a name="bit30" val="1"/>
      <a name="bit31" val="1"/>
    </comp>
    <comp lib="8" loc="(662,32)" name="Text">
      <a name="text" val="A constant is necessary because, if an instruction is recognized by this subcircuit"/>
      <a name="font" val="SansSerif plain 12"/>
    </comp>
    <comp lib="1" loc="(390,310)" name="NOT Gate"/>
    <comp lib="1" loc="(550,260)" name="AND Gate"/>
  </circuit>